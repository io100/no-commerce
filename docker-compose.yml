version: '2'
services:
  nginx:
      build: "./nginx"
      links: ["node1", "node2"]
      ports: ["80:80"]
  node1:
      build:
        context: "./node"
        args:
          http_proxy: "${http_proxy}"
          https_proxy: "${https_proxy}"
      environment:
        http_proxy: "${http_proxy}"
        https_proxy: "${https_proxy}"
        NODE_PATH: "lib"
        NODE_ENV: "production"
        POSTGRES_USER: "youruser"
        POSTGRES_PASSWORD: "yourpw"
      volumes: ["./node/.:/src"]
      links: ["postgres", "elasticsearch"]
      ports: ["8080:8080"]
  node2:
      build:
        context: "./node"
        args:
          http_proxy: "${http_proxy}"
          https_proxy: "${https_proxy}"
      environment:
        http_proxy: "${http_proxy}"
        https_proxy: "${https_proxy}"
        NODE_PATH: "lib"
        NODE_ENV: "production"
        POSTGRES_USER: "youruser"
        POSTGRES_PASSWORD: "yourpw"
      volumes: ["./node/.:/src"]
      links: ["postgres", "elasticsearch"]
      ports: [8080]
  postgres:
      image: "postgres"
      environment:
          POSTGRES_USER: "youruser"
          POSTGRES_PASSWORD: "yourpw"
      ports: ["5432:5432"]
  elasticsearch:
      image: "elasticsearch"
      environment:
          ELASTICSEARCH_USER: "youruser"
          ELASTICSEARCH_PASS: "yourpw"
      ports: ["9200:9200"]
